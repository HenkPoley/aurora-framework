<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://service.applicationsnet.com/soap/" xmlns:impl="http://service.applicationsnet.com/soap/" xmlns:xsd1="http://service.applicationsnet.com/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" name="TenantsManager" targetNamespace="http://service.applicationsnet.com/soap/">
    <wsdl:types>
        <xsd:schema elementFormDefault="qualified" targetNamespace="http://service.applicationsnet.com/soap/">
            
			<xsd:complexType name="ServiceException">
                <xsd:sequence>
                    <xsd:element name="message" nillable="true" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>

            <xsd:complexType name="Field">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="name" type="xsd:string"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="value" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>

			<complexType name="StringArray">
				<complexContent>
					<restriction base="soapenc:Array">
						<attribute ref="soapenc:arrayType" wsdl:arrayType="xsd:string[]"/>
					</restriction>
				</complexContent>
			</complexType>

			<complexType name="FieldArray">
				<complexContent>
					<restriction base="soapenc:Array">
						<attribute ref="soapenc:arrayType" wsdl:arrayType="tns:Field[]"/>
					</restriction>
				</complexContent>
			</complexType>

            <xsd:complexType name="Instance">
                <xsd:complexContent>
                    <xsd:extension base="tns:FieldArray">
                    </xsd:extension>
                </xsd:complexContent>
            </xsd:complexType>

			<complexType name="InstanceArray">
				<complexContent>
					<restriction base="soapenc:Array">
						<attribute ref="soapenc:arrayType" wsdl:arrayType="tns:Instance[]"/>
					</restriction>
				</complexContent>
			</complexType>

            
            <xsd:complexType name="Creds">
                <xsd:sequence>
                    <xsd:element minOccurs="1" maxOccurs="1" name="bTry" default="false" type="xsd:boolean" nillable="true"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="login" type="xsd:string" nillable="true"/>
                    <xsd:element minOccurs="1" maxOccurs="1" name="password" type="xsd:string" nillable="true"/>
                    <xsd:element minOccurs="0" maxOccurs="1" name="tenantId" type="xsd:int" nillable="false"/>
                    <xsd:element minOccurs="0" maxOccurs="1" name="domainId" type="xsd:int" nillable="false"/>
                    <xsd:element minOccurs="0" maxOccurs="1" name="userId" type="xsd:int" nillable="false"/>
                </xsd:sequence>
            </xsd:complexType>

            
            <xsd:element name="aInstances" type="tns:InstanceArray" />
            <xsd:element name="aFields" type="tns:FieldArray" />
			<xsd:element name="creds" type="tns:Creds" />
			<xsd:element name="aNames" type="tns:StringArray" />
			<xsd:element name="ServiceException" type="tns:ServiceException" />
			<xsd:element name="name" type="xsd:string" />
			<xsd:element name="value" type="xsd:string" />
			
        </xsd:schema>
    </wsdl:types>

    <message name="EmptyResponse"/>

    <message name="findInstancesRequest">
        <part name="aFields" element="tns:aFields" />
        <part name="creds" element="tns:creds"/>
    </message>
    
    <message name="findInstancesResponse">
        <part name="aInstances" element="tns:aInstances"/>
    </message>

    <message name="addInstanceRequest">
        <part name="aFields" element="tns:aFields"/>
        <part name="creds" element="tns:creds"/>
    </message>

    <message name="addInstanceResponse">
        <part name="id" element="xsd:int"/>
    </message>
    

    <message name="removeInstanceRequest">
        <part name="creds" element="tns:creds"/>
    </message>

    <message name="listInstancesRequest">
        <part name="creds" element="tns:creds"/>
    </message>
    
    <message name="listInstancesResponse">
        <part name="aInstances" element="tns:aInstances"/>
    </message>

    <message name="fieldRequest">
        <part name="name" element="tns:name"/>
        <part name="creds" element="tns:creds"/>
    </message>

    <message name="fieldResponse">
        <part name="res" element="xsd:string"/>
    </message>

    <message name="fieldsRequest">
        <part name="aNames" element="tns:aNames"/>
        <part name="creds" element="tns:creds"/>
    </message>

    <message name="fieldsResponse">
        <part name="aFields" element="tns:aFields"/>
    </message>

    <message name="setFieldRequest">
        <part name="name" element="tns:name"/>
        <part name="value" element="tns:value"/>
        <part name="creds" element="tns:creds"/>
    </message>

    <message name="setFieldsRequest">
        <part name="aFields" element="tns:aFields"/>
        <part name="creds" element="tns:creds"/>
    </message>

    <message name="hasCapasRequest">
        <part name="aNames" element="tns:aNames"/>
        <part name="creds" element="tns:creds"/>
    </message>
    
    <message name="hasCapasResponse">
        <part name="aFields" element="tns:aFields"/>
    </message>

    <message name="setCapasRequest">
        <part name="aFields" element="tns:aFields"/>
        <part name="creds" element="tns:creds"/>
    </message>

    <message name="ServiceException">
        <part name="ServiceException" element="tns:ServiceException"/>
    </message>
    
    
    <portType name="ServicePortType">
		<operation name="addInstance">
            <input message="tns:addInstanceRequest"/>
            <output message="tns:addInstanceResponse"/>
            <fault name="ServiceException" message="tns:ServiceException"/>
        </operation>
		<operation name="removeInstance">
			<input message="tns:removeInstanceRequest"/>
            <output message="tns:EmptyResponse"/>
            <fault name="ServiceException" message="tns:ServiceException"/>
		</operation>
    	<operation name="listInstances">
			<input message="tns:listInstancesRequest"/>
            <output message="tns:listInstancesResponse"/>
            <fault name="ServiceException" message="tns:ServiceException"/>
		</operation>
        <operation name="findInstances">
            <input message="tns:findInstancesRequest"/>
            <output message="tns:findInstancesResponse"/>
            <fault name="ServiceException" message="tns:ServiceException"/>
        </operation>
		<operation name="field">
			<input message="tns:fieldRequest"/>
            <output message="tns:fieldResponse"/>
            <fault name="ServiceException" message="tns:ServiceException"/>
		</operation>
		<operation name="fields">
			<input message="tns:fieldsRequest"/>
            <output message="tns:fieldsResponse"/>
            <fault name="ServiceException" message="tns:ServiceException"/>
		</operation>
		
		<operation name="setField">
			<input message="tns:setFieldRequest"/>
            <output message="tns:EmptyResponse"/>
            <fault name="ServiceException" message="tns:ServiceException"/>
		</operation>
		
		<operation name="setFields">
			<input message="tns:setFieldsRequest"/>
            <output message="tns:EmptyResponse"/>
            <fault name="ServiceException" message="tns:ServiceException"/>
		</operation>

		<operation name="hasCapas">
			<input message="tns:hasCapasRequest"/>
            <output message="tns:hasCapasResponse"/>
            <fault name="ServiceException" message="tns:ServiceException"/>
		</operation>

		<operation name="setCapas">
			<input message="tns:setCapasRequest"/>
            <output message="tns:EmptyResponse"/>
            <fault name="ServiceException" message="tns:ServiceException"/>
		</operation>

    </portType>
    
    <binding name="ServiceBinding" type="tns:ServicePortType">
        
		<soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>

		<operation name="addInstance">
            <soap:operation soapAction="urn:addInstance"/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="ServiceException">
                <soap:fault name="ServiceException" use="literal"/>
            </fault>
        </operation>
        
		<operation name="removeInstance">
            <soap:operation soapAction="urn:removeInstance"/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="ServiceException">
                <soap:fault name="ServiceException" use="literal"/>
            </fault>
        </operation>

		<operation name="listInstances">
            <soap:operation soapAction="urn:listInstances"/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="ServiceException">
                <soap:fault name="ServiceException" use="literal"/>
            </fault>
        </operation>

		<operation name="findInstances">
            <soap:operation soapAction="urn:findInstances"/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="ServiceException">
                <soap:fault name="ServiceException" use="literal"/>
            </fault>
        </operation>
		
		<operation name="field">
            <soap:operation soapAction="urn:field"/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="ServiceException">
                <soap:fault name="ServiceException" use="literal"/>
            </fault>
        </operation>
		
		<operation name="fields">
            <soap:operation soapAction="urn:fields"/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="ServiceException">
                <soap:fault name="ServiceException" use="literal"/>
            </fault>
        </operation>
        
        <operation name="setField">
            <soap:operation soapAction="urn:setField"/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="ServiceException">
                <soap:fault name="ServiceException" use="literal"/>
            </fault>
        </operation>
        
        <operation name="setFields">
            <soap:operation soapAction="urn:setFields"/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="ServiceException">
                <soap:fault name="ServiceException" use="literal"/>
            </fault>
        </operation>

        <operation name="hasCapas">
            <soap:operation soapAction="urn:hasCapas"/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="ServiceException">
                <soap:fault name="ServiceException" use="literal"/>
            </fault>
        </operation>

        <operation name="setCapas">
            <soap:operation soapAction="urn:setCapas"/>
            <input>
                <soap:body use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="ServiceException">
                <soap:fault name="ServiceException" use="literal"/>
            </fault>
        </operation>
        
    </binding>
	
    <service name="UsersManager">
        <port name="ServicePort" binding="tns:ServiceBinding">
            <soap:address location="http://ray.afterlogic.com/p7/saas/connectors/soap/users_manager.php"/>
        </port>
    </service>

</wsdl:definitions>
